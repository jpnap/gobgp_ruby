# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gobgp.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "gobgpapi.Error" do
    optional :code, :enum, 1, "gobgpapi.Error.ErrorCode"
    optional :msg, :string, 2
  end
  add_enum "gobgpapi.Error.ErrorCode" do
    value :SUCCESS, 0
    value :FAIL, 1
  end
  add_message "gobgpapi.Arguments" do
    optional :resource, :enum, 1, "gobgpapi.Resource"
    optional :rf, :uint32, 2
    optional :name, :string, 3
  end
  add_message "gobgpapi.ModPathArguments" do
    optional :resource, :enum, 1, "gobgpapi.Resource"
    optional :name, :string, 2
    repeated :paths, :message, 3, "gobgpapi.Path"
  end
  add_message "gobgpapi.ModNeighborArguments" do
    optional :operation, :enum, 1, "gobgpapi.Operation"
    optional :peer, :message, 2, "gobgpapi.Peer"
  end
  add_message "gobgpapi.MrtArguments" do
    optional :resource, :enum, 1, "gobgpapi.Resource"
    optional :rf, :uint32, 2
    optional :interval, :uint64, 3
    optional :neighbor_address, :string, 4
  end
  add_message "gobgpapi.ModVrfArguments" do
    optional :operation, :enum, 1, "gobgpapi.Operation"
    optional :vrf, :message, 2, "gobgpapi.Vrf"
  end
  add_message "gobgpapi.ModDefinedSetArguments" do
    optional :operation, :enum, 1, "gobgpapi.Operation"
    optional :set, :message, 2, "gobgpapi.DefinedSet"
  end
  add_message "gobgpapi.ModStatementArguments" do
    optional :operation, :enum, 1, "gobgpapi.Operation"
    optional :statement, :message, 2, "gobgpapi.Statement"
  end
  add_message "gobgpapi.ModPolicyArguments" do
    optional :operation, :enum, 1, "gobgpapi.Operation"
    optional :policy, :message, 2, "gobgpapi.Policy"
    optional :refer_existing_statements, :bool, 3
    optional :preserve_statements, :bool, 4
  end
  add_message "gobgpapi.ModPolicyAssignmentArguments" do
    optional :operation, :enum, 1, "gobgpapi.Operation"
    optional :assignment, :message, 2, "gobgpapi.PolicyAssignment"
  end
  add_message "gobgpapi.ModGlobalConfigArguments" do
    optional :operation, :enum, 1, "gobgpapi.Operation"
    optional :global, :message, 2, "gobgpapi.Global"
  end
  add_message "gobgpapi.Path" do
    optional :nlri, :bytes, 1
    repeated :pattrs, :bytes, 2
    optional :age, :int64, 3
    optional :best, :bool, 4
    optional :is_withdraw, :bool, 5
    optional :validation, :int32, 6
    optional :no_implicit_withdraw, :bool, 7
    optional :rf, :uint32, 8
    optional :source_asn, :uint32, 9
    optional :source_id, :string, 10
    optional :filtered, :bool, 11
  end
  add_message "gobgpapi.Destination" do
    optional :prefix, :string, 1
    repeated :paths, :message, 2, "gobgpapi.Path"
  end
  add_message "gobgpapi.Peer" do
    optional :addpaths, :message, 1, "gobgpapi.AddPaths"
    optional :afisafis, :message, 2, "gobgpapi.AfiSafis"
    optional :apply_policy, :message, 3, "gobgpapi.ApplyPolicy"
    optional :as_path_options, :message, 4, "gobgpapi.AsPathOptions"
    optional :conf, :message, 5, "gobgpapi.PeerConf"
    optional :ebgp_multihop, :message, 6, "gobgpapi.EbgpMultihop"
    optional :error_handling, :message, 7, "gobgpapi.ErrorHandling"
    optional :graceful_restart, :message, 8, "gobgpapi.PeerGracefulRestart"
    optional :logging_options, :message, 9, "gobgpapi.LoggingOptions"
    optional :route_reflector, :message, 10, "gobgpapi.RouteReflector"
    optional :info, :message, 11, "gobgpapi.PeerState"
    optional :timers, :message, 12, "gobgpapi.Timers"
    optional :transport, :message, 13, "gobgpapi.Transport"
    optional :use_multiple_paths, :message, 14, "gobgpapi.UseMultiplePaths"
    optional :route_server, :message, 15, "gobgpapi.RouteServer"
  end
  add_message "gobgpapi.AddPaths" do
    optional :receive, :bool, 1
    optional :send_max, :uint32, 2
  end
  add_message "gobgpapi.AfiSafis" do
    repeated :afisafi, :message, 1, "gobgpapi.AfiSafi"
  end
  add_message "gobgpapi.AfiSafi" do
    optional :name, :string, 1
    optional :apply_policy, :message, 2, "gobgpapi.ApplyPolicy"
    optional :enabled, :bool, 3
    optional :graceful_restart, :message, 4, "gobgpapi.AfiSafiGracefulRestart"
    optional :ipv4_labelled_unicast, :message, 5, "gobgpapi.LabelledUnicast"
    optional :ipv4_unicast, :message, 6, "gobgpapi.Unicast"
    optional :ipv6_labelled_unicast, :message, 7, "gobgpapi.LabelledUnicast"
    optional :ipv6_unicast, :message, 8, "gobgpapi.Unicast"
    optional :l2_vpn_evpn, :message, 9, "gobgpapi.Vpn"
    optional :l2_vpn_vpls, :message, 10, "gobgpapi.Vpn"
    optional :l3_vpn_ipv4_multicast, :message, 11, "gobgpapi.Vpn"
    optional :l3_vpn_ipv4_unicast, :message, 12, "gobgpapi.Vpn"
    optional :l3_vpn_ipv6_multicast, :message, 13, "gobgpapi.Vpn"
    optional :l3_vpn_ipv6_unicast, :message, 14, "gobgpapi.Vpn"
    optional :use_multiple_paths, :message, 15, "gobgpapi.UseMultiplePaths"
    optional :active, :bool, 16
    optional :prefixes, :message, 17, "gobgpapi.Prefixes"
  end
  add_message "gobgpapi.ApplyPolicy" do
    optional :in_policy, :message, 1, "gobgpapi.PolicyAssignment"
    optional :export_policy, :message, 2, "gobgpapi.PolicyAssignment"
    optional :import_policy, :message, 3, "gobgpapi.PolicyAssignment"
  end
  add_message "gobgpapi.AfiSafiGracefulRestart" do
    optional :advertised, :bool, 1
    optional :enabled, :bool, 2
    optional :received, :bool, 3
  end
  add_message "gobgpapi.LabelledUnicast" do
    optional :prefix_limit, :message, 1, "gobgpapi.PrefixLimit"
  end
  add_message "gobgpapi.PrefixLimit" do
    optional :max_prefixes, :uint32, 1
    optional :restart_timer, :uint64, 2
    optional :shutdown_threshold_pct, :uint32, 3
  end
  add_message "gobgpapi.Unicast" do
    optional :send_default_route, :bool, 1
    optional :prefix_limit, :message, 2, "gobgpapi.PrefixLimit"
  end
  add_message "gobgpapi.Vpn" do
    optional :prefix_limit, :message, 1, "gobgpapi.PrefixLimit"
  end
  add_message "gobgpapi.Prefixes" do
    optional :installed, :uint32, 1
    optional :received, :uint32, 2
    optional :sent, :uint32, 3
  end
  add_message "gobgpapi.UseMultiplePaths" do
    optional :enabled, :bool, 1
    optional :ebgp, :message, 2, "gobgpapi.Ebgp"
  end
  add_message "gobgpapi.Ebgp" do
    optional :allow_multiple_as, :bool, 1
  end
  add_message "gobgpapi.AsPathOptions" do
    optional :allow_own_as, :uint32, 1
    optional :replace_peer_as, :bool, 2
  end
  add_message "gobgpapi.PeerConf" do
    optional :auth_password, :string, 1
    optional :description, :string, 2
    optional :local_as, :uint32, 3
    optional :neighbor_address, :string, 4
    optional :peer_as, :uint32, 5
    optional :peer_group, :string, 6
    optional :peer_type, :uint32, 7
    optional :remove_private_as, :uint32, 8
    optional :route_flap_damping, :bool, 9
    optional :send_community, :uint32, 10
    repeated :remote_cap, :bytes, 11
    repeated :local_cap, :bytes, 12
    optional :id, :string, 13
  end
  add_message "gobgpapi.EbgpMultihop" do
    optional :enabled, :bool, 1
    optional :multihop_ttl, :uint32, 2
  end
  add_message "gobgpapi.ErrorHandling" do
    optional :erroneous_update_messages, :uint32, 1
    optional :treat_as_withdraw, :bool, 2
  end
  add_message "gobgpapi.PeerGracefulRestart" do
    optional :enabled, :bool, 1
    optional :helper_only, :bool, 2
    optional :local_restarting, :bool, 3
    optional :mode, :uint32, 4
    optional :peer_restart_time, :uint32, 5
    optional :peer_restarting, :bool, 6
    optional :restart_time, :uint32, 7
    optional :stale_routes_time, :uint64, 8
  end
  add_message "gobgpapi.LoggingOptions" do
    optional :logNeighbor_state_changes, :bool, 1
  end
  add_message "gobgpapi.RouteReflector" do
    optional :route_reflector_client, :bool, 1
    optional :route_reflector_cluster_id, :uint32, 2
  end
  add_message "gobgpapi.PeerState" do
    optional :auth_password, :string, 1
    optional :description, :string, 2
    optional :local_as, :uint32, 3
    optional :messages, :message, 4, "gobgpapi.Messages"
    optional :neighbor_address, :string, 5
    optional :peer_as, :uint32, 6
    optional :peer_group, :string, 7
    optional :peer_type, :uint32, 8
    optional :queues, :message, 9, "gobgpapi.Queues"
    optional :remove_private_as, :uint32, 10
    optional :route_flap_damping, :bool, 11
    optional :send_community, :uint32, 12
    optional :session_state, :uint32, 13
    repeated :supported_capabilities, :string, 14
    optional :bgp_state, :string, 15
    optional :admin_state, :string, 16
    optional :received, :uint32, 17
    optional :accepted, :uint32, 18
    optional :advertized, :uint32, 19
    optional :out_q, :uint32, 20
    optional :flops, :uint32, 21
  end
  add_message "gobgpapi.Messages" do
    optional :received, :message, 1, "gobgpapi.Message"
    optional :sent, :message, 2, "gobgpapi.Message"
  end
  add_message "gobgpapi.Message" do
    optional :NOTIFICATION, :uint64, 1
    optional :UPDATE, :uint64, 2
    optional :OPEN, :uint64, 3
    optional :KEEPALIVE, :uint64, 4
    optional :REFRESH, :uint64, 5
    optional :DISCARDED, :uint64, 6
    optional :TOTAL, :uint64, 7
  end
  add_message "gobgpapi.Queues" do
    optional :input, :uint32, 1
    optional :output, :uint32, 2
  end
  add_message "gobgpapi.Timers" do
    optional :config, :message, 1, "gobgpapi.TimersConfig"
    optional :state, :message, 2, "gobgpapi.TimersState"
  end
  add_message "gobgpapi.TimersConfig" do
    optional :connect_retry, :uint64, 1
    optional :hold_time, :uint64, 2
    optional :keepalive_interval, :uint64, 3
    optional :minimum_advertisement_interval, :uint64, 4
  end
  add_message "gobgpapi.TimersState" do
    optional :connect_retry, :uint64, 1
    optional :hold_time, :uint64, 2
    optional :keepalive_interval, :uint64, 3
    optional :minimum_advertisement_interval, :uint64, 4
    optional :negotiated_hold_time, :uint64, 5
    optional :uptime, :uint64, 6
    optional :downtime, :uint64, 7
  end
  add_message "gobgpapi.Transport" do
    optional :local_address, :string, 1
    optional :local_port, :uint32, 2
    optional :mtu_discovery, :bool, 3
    optional :passive_mode, :bool, 4
    optional :remote_address, :string, 5
    optional :remote_port, :uint32, 6
    optional :tcp_mss, :uint32, 7
  end
  add_message "gobgpapi.RouteServer" do
    optional :route_server_client, :bool, 1
  end
  add_message "gobgpapi.Prefix" do
    optional :ip_prefix, :string, 1
    optional :mask_length_min, :uint32, 2
    optional :mask_length_max, :uint32, 3
  end
  add_message "gobgpapi.DefinedSet" do
    optional :type, :enum, 1, "gobgpapi.DefinedType"
    optional :name, :string, 2
    repeated :list, :string, 3
    repeated :prefixes, :message, 4, "gobgpapi.Prefix"
  end
  add_message "gobgpapi.MatchSet" do
    optional :type, :enum, 1, "gobgpapi.MatchType"
    optional :name, :string, 2
  end
  add_message "gobgpapi.AsPathLength" do
    optional :type, :enum, 1, "gobgpapi.AsPathLengthType"
    optional :length, :uint32, 2
  end
  add_message "gobgpapi.Conditions" do
    optional :prefix_set, :message, 1, "gobgpapi.MatchSet"
    optional :neighbor_set, :message, 2, "gobgpapi.MatchSet"
    optional :as_path_length, :message, 3, "gobgpapi.AsPathLength"
    optional :as_path_set, :message, 4, "gobgpapi.MatchSet"
    optional :community_set, :message, 5, "gobgpapi.MatchSet"
    optional :ext_community_set, :message, 6, "gobgpapi.MatchSet"
    optional :rpki_result, :int32, 7
  end
  add_message "gobgpapi.CommunityAction" do
    optional :type, :enum, 1, "gobgpapi.CommunityActionType"
    repeated :communities, :string, 2
  end
  add_message "gobgpapi.MedAction" do
    optional :type, :enum, 1, "gobgpapi.MedActionType"
    optional :value, :int64, 2
  end
  add_message "gobgpapi.AsPrependAction" do
    optional :asn, :uint32, 1
    optional :repeat, :uint32, 2
    optional :use_left_most, :bool, 3
  end
  add_message "gobgpapi.Actions" do
    optional :route_action, :enum, 1, "gobgpapi.RouteAction"
    optional :community, :message, 2, "gobgpapi.CommunityAction"
    optional :med, :message, 3, "gobgpapi.MedAction"
    optional :as_prepend, :message, 4, "gobgpapi.AsPrependAction"
    optional :ext_community, :message, 5, "gobgpapi.CommunityAction"
  end
  add_message "gobgpapi.Statement" do
    optional :name, :string, 1
    optional :conditions, :message, 2, "gobgpapi.Conditions"
    optional :actions, :message, 3, "gobgpapi.Actions"
  end
  add_message "gobgpapi.Policy" do
    optional :name, :string, 1
    repeated :statements, :message, 2, "gobgpapi.Statement"
  end
  add_message "gobgpapi.PolicyAssignment" do
    optional :type, :enum, 1, "gobgpapi.PolicyType"
    optional :resource, :enum, 2, "gobgpapi.Resource"
    optional :name, :string, 3
    repeated :policies, :message, 4, "gobgpapi.Policy"
    optional :default, :enum, 5, "gobgpapi.RouteAction"
  end
  add_message "gobgpapi.MrtMessage" do
    optional :data, :bytes, 1
  end
  add_message "gobgpapi.RPKIConf" do
    optional :address, :string, 1
  end
  add_message "gobgpapi.RPKIState" do
    optional :uptime, :int64, 1
    optional :downtime, :int64, 2
    optional :received_ipv4, :int32, 3
    optional :received_ipv6, :int32, 4
  end
  add_message "gobgpapi.RPKI" do
    optional :conf, :message, 1, "gobgpapi.RPKIConf"
    optional :state, :message, 2, "gobgpapi.RPKIState"
  end
  add_message "gobgpapi.ROA" do
    optional :as, :uint32, 1
    optional :prefixlen, :uint32, 2
    optional :maxlen, :uint32, 3
    optional :prefix, :string, 4
  end
  add_message "gobgpapi.Vrf" do
    optional :name, :string, 1
    optional :rd, :bytes, 2
    repeated :import_rt, :bytes, 3
    repeated :export_rt, :bytes, 4
  end
  add_message "gobgpapi.Global" do
    optional :as, :uint32, 1
    optional :router_id, :string, 2
  end
  add_enum "gobgpapi.Resource" do
    value :GLOBAL, 0
    value :LOCAL, 1
    value :ADJ_IN, 2
    value :ADJ_OUT, 3
    value :VRF, 4
  end
  add_enum "gobgpapi.Operation" do
    value :ADD, 0
    value :DEL, 1
    value :DEL_ALL, 2
    value :REPLACE, 3
  end
  add_enum "gobgpapi.DefinedType" do
    value :PREFIX, 0
    value :NEIGHBOR, 1
    value :TAG, 2
    value :AS_PATH, 3
    value :COMMUNITY, 4
    value :EXT_COMMUNITY, 5
  end
  add_enum "gobgpapi.MatchType" do
    value :ANY, 0
    value :ALL, 1
    value :INVERT, 2
  end
  add_enum "gobgpapi.AsPathLengthType" do
    value :EQ, 0
    value :GE, 1
    value :LE, 2
  end
  add_enum "gobgpapi.RouteAction" do
    value :NONE, 0
    value :ACCEPT, 1
    value :REJECT, 2
  end
  add_enum "gobgpapi.CommunityActionType" do
    value :COMMUNITY_ADD, 0
    value :COMMUNITY_REMOVE, 1
    value :COMMUNITY_REPLACE, 2
  end
  add_enum "gobgpapi.MedActionType" do
    value :MED_MOD, 0
    value :MED_REPLACE, 1
  end
  add_enum "gobgpapi.PolicyType" do
    value :IN, 0
    value :IMPORT, 1
    value :EXPORT, 2
  end
end

module Gobgpapi
  Error = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Error").msgclass
  Error::ErrorCode = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Error.ErrorCode").enummodule
  Arguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Arguments").msgclass
  ModPathArguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ModPathArguments").msgclass
  ModNeighborArguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ModNeighborArguments").msgclass
  MrtArguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.MrtArguments").msgclass
  ModVrfArguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ModVrfArguments").msgclass
  ModDefinedSetArguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ModDefinedSetArguments").msgclass
  ModStatementArguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ModStatementArguments").msgclass
  ModPolicyArguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ModPolicyArguments").msgclass
  ModPolicyAssignmentArguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ModPolicyAssignmentArguments").msgclass
  ModGlobalConfigArguments = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ModGlobalConfigArguments").msgclass
  Path = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Path").msgclass
  Destination = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Destination").msgclass
  Peer = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Peer").msgclass
  AddPaths = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.AddPaths").msgclass
  AfiSafis = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.AfiSafis").msgclass
  AfiSafi = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.AfiSafi").msgclass
  ApplyPolicy = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ApplyPolicy").msgclass
  AfiSafiGracefulRestart = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.AfiSafiGracefulRestart").msgclass
  LabelledUnicast = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.LabelledUnicast").msgclass
  PrefixLimit = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.PrefixLimit").msgclass
  Unicast = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Unicast").msgclass
  Vpn = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Vpn").msgclass
  Prefixes = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Prefixes").msgclass
  UseMultiplePaths = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.UseMultiplePaths").msgclass
  Ebgp = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Ebgp").msgclass
  AsPathOptions = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.AsPathOptions").msgclass
  PeerConf = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.PeerConf").msgclass
  EbgpMultihop = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.EbgpMultihop").msgclass
  ErrorHandling = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ErrorHandling").msgclass
  PeerGracefulRestart = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.PeerGracefulRestart").msgclass
  LoggingOptions = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.LoggingOptions").msgclass
  RouteReflector = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.RouteReflector").msgclass
  PeerState = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.PeerState").msgclass
  Messages = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Messages").msgclass
  Message = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Message").msgclass
  Queues = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Queues").msgclass
  Timers = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Timers").msgclass
  TimersConfig = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.TimersConfig").msgclass
  TimersState = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.TimersState").msgclass
  Transport = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Transport").msgclass
  RouteServer = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.RouteServer").msgclass
  Prefix = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Prefix").msgclass
  DefinedSet = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.DefinedSet").msgclass
  MatchSet = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.MatchSet").msgclass
  AsPathLength = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.AsPathLength").msgclass
  Conditions = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Conditions").msgclass
  CommunityAction = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.CommunityAction").msgclass
  MedAction = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.MedAction").msgclass
  AsPrependAction = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.AsPrependAction").msgclass
  Actions = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Actions").msgclass
  Statement = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Statement").msgclass
  Policy = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Policy").msgclass
  PolicyAssignment = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.PolicyAssignment").msgclass
  MrtMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.MrtMessage").msgclass
  RPKIConf = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.RPKIConf").msgclass
  RPKIState = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.RPKIState").msgclass
  RPKI = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.RPKI").msgclass
  ROA = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.ROA").msgclass
  Vrf = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Vrf").msgclass
  Global = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Global").msgclass
  Resource = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Resource").enummodule
  Operation = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.Operation").enummodule
  DefinedType = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.DefinedType").enummodule
  MatchType = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.MatchType").enummodule
  AsPathLengthType = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.AsPathLengthType").enummodule
  RouteAction = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.RouteAction").enummodule
  CommunityActionType = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.CommunityActionType").enummodule
  MedActionType = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.MedActionType").enummodule
  PolicyType = Google::Protobuf::DescriptorPool.generated_pool.lookup("gobgpapi.PolicyType").enummodule
end
